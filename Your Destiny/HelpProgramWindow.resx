<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6njzXr7cU5sAAAAASUVORK5CYII=
</value>
  </data>
</root>